---
- name: Create VM
  hosts: vmware2
  become: false
  gather_facts: false
  vars_files:
    - vars/vc.yml
  tasks:

    - set_fact:
        vm_name: "{{ iac_master_name }}"

    - name: "Find folder for VM - {{ vm_name }}"
      community.vmware.vmware_guest_find:
        hostname: "{{ vcenter_hostname }}"
        username: "{{ vcenter_username }}"
        password: "{{ vcenter_password }}"
        validate_certs: "{{ vcenter_validate_certs }}"
        name: "{{ vm_name }}"
      delegate_to: localhost
      register: master_vm_facts

    - name: "Print info about {{ vm_disk_datastore }} master"
      ansible.builtin.debug:
        var: master_vm_facts

    - name: "Gather info from datacenter about {{ vm_disk_datastore }} datastore"
      community.vmware.vmware_datastore_info:
        hostname: "{{ vcenter_hostname }}"
        username: "{{ vcenter_username }}"
        password: "{{ vcenter_password }}"
        validate_certs: "{{ vcenter_validate_certs }}"
        datacenter_name: "{{ vcenter_datacenter }}"
        schema: vsphere
        name: "{{ vm_disk_datastore }}"
      delegate_to: localhost
      register: datastore_info

    - name: "Print info about {{ vm_disk_datastore }} datastore volume"
      ansible.builtin.debug:
        var: datastore_info

    - name: Create VM
      community.vmware.vmware_guest:
        hostname: "{{ vcenter_hostname }}"
        username: "{{ vcenter_username }}"
        password: "{{ vcenter_password }}"
        validate_certs: "{{ vcenter_validate_certs }}"
        datacenter: "{{ vcenter_datacenter }}"
        annotation: |
          Infra As Code (IAC) Auto generated VM
        datastore: "{{ vm_disk_datastore }}"
        name: "{{ vm_name }}"
        state: "poweredoff"
        guest_id: "{{ vm_guestid }}"
        disk:
          - size_gb: "{{ vm_disk_gb }}"
            type: "{{ vm_disk_type }}"
            datastore: "{{ vm_disk_datastore }}"
        hardware:
          memory_mb: "{{ vm_hw_ram_mb }}"
          num_cpus: "{{ vm_hw_cpu_n }}"
          scsi: "{{ vm_hw_scsi }}"
        networks:
          - name: "{{ vm_net_name }}"
            device_name: "{{ vm_net_device }}"
      delegate_to: localhost
      register: vm_create_facts

    - name: Print info about created VM
      ansible.builtin.debug:
        var: vm_create_facts

    # - name: Clone a template
    #   community.vmware.vmware_guest:
    #     hostname: "{{ vcenter_hostname }}"
    #     username: "{{ vcenter_username }}"
    #     password: "{{ vcenter_password }}"
    #     # datacenter: "{{ vcenter_datacenter }}"
    #     validate_certs: "{{ vcenter_validate_certs }}"
    #     name: iac-test-vm
    #     template: iac-template
    #     folder: "{{ vms_destination_folder }}/test-vm"
    #     state: poweredon
    #     wait_for_ip_address: yes
    #   delegate_to: localhost
    #   register: vm_template_clone
